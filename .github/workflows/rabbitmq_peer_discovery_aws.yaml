name: Peer Discovery AWS Integration Test
on:
  push:
    branches:
      - master
      - v3.9.x
      - v3.8.x
    paths:
      - 'deps/rabbitmq_peer_discovery_aws/**'
      - .github/workflows/rabbitmq_peer_discovery_aws.yaml
  workflow_dispatch:
jobs:
  peer-discovery-aws-integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_tag_suffix:
        - otp-max
        include:
        - image_tag_suffix: otp-max
          erlang_version: "24"
          rbe_default_branch: linux-erlang-24.1
    timeout-minutes: 45
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v3.1.0
    - name: WAIT FOR OCI IMAGE WORKFLOW
      uses: lewagon/wait-on-check-action@v1.1.1
      with:
        ref: ${{ github.ref }}
        check-name: build-publish-dev (${{ matrix.image_tag_suffix }})
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 30 # seconds
    - name: MOUNT BAZEL CACHE
      uses: actions/cache@v1
      with:
        path: "/home/runner/repo-cache/"
        key: repo-cache
    - name: CONFIGURE BAZEL
      run: |
        cat << EOF >> user.bazelrc
          build:buildbuddy --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}

          build:buildbuddy --build_metadata=ROLE=CI
          build:buildbuddy --build_metadata=VISIBILITY=PRIVATE
          build:buildbuddy --remote_instance_name=buildbuddy-io/buildbuddy/ci-aws-${{ matrix.erlang_version }}
          build:buildbuddy --repository_cache=/home/runner/repo-cache/
          build:buildbuddy --color=yes
          build:buildbuddy --disk_cache=
        EOF
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: RUN INTEGRATION TESTS
      run: |
        sudo sysctl -w net.ipv4.tcp_keepalive_time=60
        sudo ethtool -K eth0 tso off gso off gro off tx off rx off lro off

        branch_or_tag="${GITHUB_REF##*/}"
        bazelisk test //deps/rabbitmq_peer_discovery_aws:integration_SUITE \
          --config=rbe-${{ matrix.erlang_version }} \
          --test_tag_filters=aws \
          --build_tests_only \
          --test_env AWS_ACCESS_KEY_ID=${{ secrets.CONCOURSE_AWS_ACCESS_KEY_ID }} \
          --test_env AWS_SECRET_ACCESS_KEY=${{ secrets.CONCOURSE_AWS_SECRET_ACCESS_KEY }} \
          --test_env RABBITMQ_IMAGE="pivotalrabbitmq/rabbitmq:${{ github.sha }}-otp-max" \
          --test_env AWS_ECS_CLUSTER_NAME="rabbitmq-peer-discovery-aws-actions-${branch_or_tag//./-}" \
          --verbose_failures
